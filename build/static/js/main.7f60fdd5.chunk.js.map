{"version":3,"sources":["components/developer-typed.tsx","components/navbar.tsx","images/desk3.png","components/landing-image.tsx","components/about-me.tsx","pages/landing-page.tsx","theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["strings","DeveloperTyped","useState","displaySecondLineCursor","setDisplaySecondLineCursor","Box","sx","alignItems","Typography","variant","startDelay","typeSpeed","backSpeed","onComplete","instance","cursor","remove","showCursor","Navbar","toggleDarkMode","darkMode","flexGrow","AppBar","position","Toolbar","Button","color","ml","onClick","marginRight","LandingImage","style","height","width","display","src","desk","alt","top","left","transform","AboutMe","Paper","elevation","LandingPage","themeDark","createTheme","palette","mode","primary","main","secondary","text","background","default","divider","typography","allVariants","fontFamily","themeLight","App","setDarkMode","ThemeProvider","theme","console","log","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f60fdd5.chunk.js","sourcesContent":["import { Box, Typography } from '@mui/material'\r\nimport Typed from 'react-typed'\r\nimport { useState } from 'react'\r\n\r\nconst startDelay = 200\r\nconst typeSpeed = 45\r\nconst backSpeed = 20\r\nconst strings = ['Frontend', 'Backend', 'Full Stack Developer']\r\nconst name = 'Matthew Bevan'\r\n\r\nconst developerTextDelay = 1100\r\n\r\nexport const DeveloperTyped = () => {\r\n  const [displaySecondLineCursor, setDisplaySecondLineCursor] = useState(false)\r\n  return (\r\n    <Box sx={{ alignItems: 'center' }}>\r\n      <Typography variant={'h1'}>\r\n        <Typed\r\n          strings={[name]}\r\n          startDelay={startDelay}\r\n          typeSpeed={typeSpeed}\r\n          backSpeed={backSpeed}\r\n          onComplete={(instance: { cursor: { remove: () => void } }) => {\r\n            instance.cursor.remove()\r\n            setDisplaySecondLineCursor(true)\r\n          }}\r\n        />\r\n      </Typography>\r\n      <Typography variant={'h3'}>\r\n        <Typed\r\n          strings={strings}\r\n          startDelay={developerTextDelay}\r\n          typeSpeed={typeSpeed}\r\n          backSpeed={backSpeed}\r\n          showCursor={displaySecondLineCursor}\r\n        />\r\n      </Typography>\r\n    </Box>\r\n  )\r\n}\r\n","import { Box, AppBar, Toolbar, Button } from '@mui/material'\r\nimport ModeNightIcon from '@mui/icons-material/ModeNight'\r\nimport Brightness5OutlinedIcon from '@mui/icons-material/Brightness5Outlined'\r\n\r\nexport const Navbar = ({\r\n  toggleDarkMode,\r\n  darkMode\r\n}: {\r\n  toggleDarkMode(): void\r\n  darkMode: boolean\r\n}) => {\r\n  const buttonMargin = 6\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position='static' sx={{ alignItems: 'center' }}>\r\n        <Toolbar>\r\n          <Button color='inherit'>About Me</Button>\r\n          <Box ml={buttonMargin} />\r\n          <Button color='inherit'>Experience</Button>\r\n          <Box ml={buttonMargin} />\r\n          <Button color='inherit'>Skills</Button>\r\n          <Box ml={buttonMargin} />\r\n          <Button color='inherit'>Contact</Button>\r\n          <Box ml={buttonMargin} />\r\n\r\n          <Button color='inherit' onClick={toggleDarkMode}>\r\n            {darkMode ? (\r\n              <>\r\n                <ModeNightIcon sx={{ marginRight: '8px' }} /> Dark Mode\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Brightness5OutlinedIcon sx={{ marginRight: '8px' }} /> Light\r\n                Mode\r\n              </>\r\n            )}\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","export default __webpack_public_path__ + \"static/media/desk3.73fc36f4.png\";","import desk from '../images/desk3.png'\r\nimport { DeveloperTyped } from '.'\r\n\r\nexport const LandingImage = () => {\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <img\r\n        style={{\r\n          height: 'auto',\r\n          width: '100%',\r\n          display: 'block'\r\n        }}\r\n        src={desk}\r\n        alt='Desk'\r\n      />\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          color: 'white',\r\n          top: '40%',\r\n          left: '50%',\r\n          transform: 'translateX(-50%)'\r\n        }}\r\n      >\r\n        <DeveloperTyped />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LandingImage\r\n","import { Box, Paper } from '@mui/material'\r\n\r\nexport const AboutMe = () => {\r\n  return (\r\n    <Box>\r\n      <Paper elevation={3}>This is a test</Paper>\r\n    </Box>\r\n  )\r\n}\r\n","import { Box } from '@mui/material'\r\nimport { AboutMe, LandingImage } from '../components'\r\n\r\nexport const LandingPage = () => {\r\n  return (\r\n    <>\r\n      <Box sx={{}}>\r\n        <LandingImage />\r\n        <AboutMe />\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LandingPage\r\n","import { createTheme } from '@mui/material'\r\n\r\nexport const themeDark = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: {\r\n      main: '#eeeeee'\r\n    },\r\n    secondary: {\r\n      main: '#9ccc65'\r\n    },\r\n    text: {\r\n      primary: '#EEE8DC'\r\n    },\r\n    background: {\r\n      default: '#343239'\r\n    },\r\n    divider: '#dcedc8'\r\n  },\r\n  typography: {\r\n    allVariants: {\r\n      fontFamily: 'Fira Code'\r\n    }\r\n  }\r\n})\r\n\r\nexport const themeLight = createTheme({\r\n  palette: {\r\n    mode: 'light',\r\n    primary: {\r\n      main: '#eeeeee'\r\n    },\r\n    secondary: {\r\n      main: '#9ccc65'\r\n    },\r\n    text: {\r\n      primary: '#EEE8DC'\r\n    },\r\n    background: {\r\n      default: '#ffffff'\r\n    },\r\n    divider: '#dcedc8'\r\n  },\r\n  typography: {\r\n    allVariants: {\r\n      fontFamily: 'Fira Code'\r\n    }\r\n  }\r\n})\r\n","import './App.css'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport { Navbar } from './components'\nimport { LandingPage } from './pages'\nimport { ThemeProvider } from '@mui/system'\nimport { themeDark, themeLight } from './theme'\nimport { useState } from 'react'\n\nconst App = () => {\n  const [darkMode, setDarkMode] = useState(true)\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode)\n    console.log(darkMode)\n  }\n\n  return (\n    <>\n      <ThemeProvider theme={darkMode ? themeDark : themeLight}>\n        <Navbar toggleDarkMode={() => toggleDarkMode()} darkMode={darkMode} />\n        <BrowserRouter>\n          <Routes>\n            <Route path='/' element={<LandingPage />} />\n          </Routes>\n        </BrowserRouter>\n      </ThemeProvider>\n    </>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}